{"version":3,"sources":["components/Forms/AnimeForm/AnimeForm.tsx","components/Title/Title.tsx","components/Header/NavLink/NavLink.tsx","components/Header/InputSearch/InputSearch.tsx","components/Header/Header.tsx","components/Banner/Banner.tsx","components/AnimeComponents/AnimeCard/AnimeCard.tsx","components/EpisodeComponents/EpisodeCard/EpisodeCard.tsx","components/Gallery/Gallery.tsx","components/AnimeComponents/AnimeView/AnimeView.tsx","utils/Theme.ts","components/EpisodeComponents/EpisodeView/EpisodeView.tsx","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["AnimeForm","onCreate","addTagOption","tagOptions","history","useHistory","React","setFormSubmitted","name","setName","description","setDescription","cover","setCover","status","setStatus","handleStatusChange","event","target","value","console","log","initialTags","map","tagString","label","tags","setTags","isNameValid","length","isDescriptionValid","className","onSubmit","preventDefault","tagsStrings","obj","anime","id","Math","random","process","episodes","push","type","onChange","placeholder","cols","rows","Autocomplete","multiple","freeSolo","disableClearable","style","width","margin","options","renderInput","params","TextField","values","transformed","op","isOptionEqualToValue","option","Title","text","url","href","NavLink","activeClassName","to","InputSearch","Header","src","alt","onClick","Banner","animeList","currentIndex","setCurrentIndex","img","setImg","styles","backgroundImage","elem","i","arr","index","AnimeCard","EpisodeCard","thumbnail","number","Gallery","listAnime","listEpisode","withoutPadding","undefined","episode","animeName","AnimeView","list","idString","useParams","parseFloat","find","tag","theme","createTheme","palette","primary","main","secondary","EpisodeView","date","frameBorder","App","animesBanner","useState","videoUrl","episodeElems","animeElems","setAnimeElems","setTagOptions","exact","path","newAnimeElem","arrayCopy","newTagOption","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9f47bdb.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport \"./AnimeForm.css\";\r\nimport {useHistory} from \"react-router\";\r\nimport {AnimeObj} from \"../../../Types/AnimeObj\";\r\nimport {Autocomplete, TextField} from \"@mui/material\";\r\nimport {TagOption} from \"../../../Types/TagOption\";\r\n\r\ninterface AnimeFormProps {\r\n   tagOptions: TagOption[];\r\n   onCreate: (newAnimeElem: AnimeObj) => void;\r\n   addTagOption: (newTagOption: TagOption) => void;\r\n}\r\n\r\nconst AnimeForm: React.FC<AnimeFormProps> = ({onCreate, addTagOption, tagOptions}) => {\r\n   const history = useHistory();\r\n\r\n   const [formSubmitted, setFormSubmitted] = React.useState(false);\r\n\r\n   const [name, setName] = React.useState(\"\");\r\n   const handleNameChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n      setName(event.target.value);\r\n   };\r\n\r\n   const [description, setDescription] = React.useState(\"\");\r\n   const handleDescriptionChange: React.ChangeEventHandler<HTMLTextAreaElement> = (event) => {\r\n      setDescription(event.target.value);\r\n   };\r\n\r\n   const [cover, setCover] = React.useState(\"\");\r\n   const handleCoverChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n      setCover(event.target.value);\r\n   };\r\n\r\n   const [status, setStatus] = React.useState(\"\");\r\n   const handleStatusChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n      setStatus(event.target.value);\r\n      console.log(status);\r\n   };\r\n\r\n   const initialTags = [].map((tagString) => {\r\n      return {\r\n         label: tagString,\r\n      };\r\n   });\r\n\r\n   const [tags, setTags] = React.useState<TagOption[]>(initialTags);\r\n   const handleTagsChange = (event: React.SyntheticEvent<Element, Event>, values: (TagOption | string)[]) => {\r\n      const transformed = values.map((value) => {\r\n         // si el valor es un string, quiere decir que el usurio está agregando una nueva opción\r\n         if (typeof value === \"string\") {\r\n            const op = {label: value};\r\n            addTagOption(op); // agregamos la nueva opción a la lista general de opciones\r\n            return op;\r\n         }\r\n         return value;\r\n      });\r\n      setTags(transformed);\r\n   };\r\n\r\n   //validaciones\r\n\r\n   const isNameValid: boolean = name !== \"\" && name.length >= 5;\r\n   const isDescriptionValid: boolean = name !== \"\" && name.length >= 5;\r\n\r\n   const handleSubmit: React.FormEventHandler<HTMLFormElement> = (event: any) => {\r\n      event.preventDefault();\r\n      setFormSubmitted(true);\r\n\r\n      const tagsStrings = tags.map((obj) => obj.label);\r\n\r\n      if (isNameValid && isDescriptionValid) {\r\n         const anime: AnimeObj = {\r\n            id: Math.random(),\r\n            name: name,\r\n            cover: `${process.env.PUBLIC_URL}/images/Covers/` + cover,\r\n            description: description,\r\n            status: status,\r\n            tags: tagsStrings,\r\n            episodes: [],\r\n         };\r\n         onCreate(anime);\r\n      }\r\n      // si el formulario es válido, llamamos al evento onCreate\r\n\r\n      history.push(\"/\");\r\n   };\r\n\r\n   return (\r\n      <section>\r\n         <form className=\"AnimeForm\" onSubmit={handleSubmit}>\r\n            <h2>Create AnimeObj</h2>\r\n            <label className=\"input\">\r\n               Name\r\n               <input type=\"text\" onChange={handleNameChange} value={name} placeholder=\"Name\" />\r\n            </label>\r\n\r\n            <label className=\"input\">\r\n               Cover\r\n               <input type=\"text\" onChange={handleCoverChange} value={cover} placeholder=\"Cover\" />\r\n            </label>\r\n\r\n            <label className=\"input\">\r\n               Description\r\n               <textarea\r\n                  onChange={handleDescriptionChange}\r\n                  value={description}\r\n                  placeholder=\"Description\"\r\n                  cols={30}\r\n                  rows={10}\r\n               />\r\n            </label>\r\n\r\n            <div className=\"AnimeForm__Status\">\r\n               <p>Status</p>\r\n\r\n               <div className=\"AnimeForm__Status__inputContainer\">\r\n                  <div className=\"input--radio\">\r\n                     <input type=\"radio\" name=\"status\" value=\"Finish\" onChange={handleStatusChange} />\r\n                     <label>Finish</label>\r\n                  </div>\r\n\r\n                  <div className=\"input--radio\">\r\n                     <input type=\"radio\" name=\"status\" value=\"In Broadcast\" onChange={handleStatusChange} />\r\n                     <label>In Broadcast</label>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n\r\n            <Autocomplete\r\n               multiple\r\n               freeSolo\r\n               disableClearable\r\n               style={{\r\n                  width: \"100%\",\r\n                  margin: \"16px\",\r\n               }}\r\n               id=\"combo-box-demo\"\r\n               options={tagOptions}\r\n               renderInput={(params) => <TextField {...params} label=\"Tags\" placeholder=\"Add a tag\" />}\r\n               onChange={handleTagsChange}\r\n               value={tags as any}\r\n               isOptionEqualToValue={(option, value) => {\r\n                  return option.label === value.label;\r\n               }}\r\n            />\r\n\r\n            <button>Create</button>\r\n         </form>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default AnimeForm;\r\n","import * as React from \"react\";\r\nimport \"./Title.css\";\r\n\r\ninterface TitleProps {\r\n    text: string;\r\n    url: string;\r\n}\r\n\r\nconst Title: React.FC<TitleProps> = ({text, url}) => {\r\n    return (\r\n        <div className=\"Title\">\r\n            <h2>{text}</h2>\r\n            <a href={url}>See All</a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Title;\r\n","import * as React from \"react\";\r\nimport {NavLink as Rlink} from \"react-router-dom\";\r\nimport \"./NavLink.css\";\r\n\r\ninterface NavLinkProps {\r\n   text: string;\r\n   url: string;\r\n}\r\n\r\nconst NavLink: React.FC<NavLinkProps> = ({text, url}) => {\r\n   return (\r\n      <Rlink className=\"Link\" activeClassName=\"Link--active\" to={url}>\r\n         {text}\r\n      </Rlink>\r\n   );\r\n};\r\n\r\nexport default NavLink;\r\n","import * as React from \"react\";\r\nimport \"./InputSearch.css\";\r\n\r\ninterface InputSearchProps {}\r\n\r\nconst InputSearch: React.FC<InputSearchProps> = ({}) => {\r\n   return (\r\n      <div className=\"inputSearch\">\r\n         <input type=\"text\" placeholder=\"What do you want to search?\" />\r\n         <span className=\"inputSearch__Icon material-icons-round md-dark\">search</span>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default InputSearch;\r\n","import * as React from \"react\";\r\nimport \"./Header.css\";\r\nimport NavLink from \"./NavLink/NavLink\";\r\nimport InputSearch from \"./InputSearch/InputSearch\";\r\nimport {useHistory} from \"react-router\";\r\n\r\ninterface HeaderProps {}\r\n\r\nconst Header: React.FC<HeaderProps> = ({}) => {\r\n   const history = useHistory();\r\n\r\n   const handleHomeClick: any = () => {\r\n      history.push(\"/\");\r\n   };\r\n\r\n   return (\r\n      <header className=\"header\">\r\n         <div className=\"header__section\">\r\n            <img\r\n               className=\"header__logo\"\r\n               src={`${process.env.PUBLIC_URL}/images/General/logo.svg`}\r\n               alt=\"\"\r\n               onClick={handleHomeClick}\r\n            />\r\n            <nav>\r\n               <NavLink text=\"Forms\" url=\"/Forms\" />\r\n               <NavLink text=\"Studios\" url=\"/Studios\" />\r\n            </nav>\r\n         </div>\r\n\r\n         <div className=\"header__section\">\r\n            <InputSearch />\r\n         </div>\r\n      </header>\r\n   );\r\n};\r\n\r\nexport default Header;\r\n","import * as React from \"react\";\r\nimport \"./Banner.css\";\r\nimport {BannerObj} from \"../../Types/BannerObj\";\r\n\r\ninterface BannerProps {\r\n   animeList: BannerObj[];\r\n}\r\n\r\nconst Banner: React.FC<BannerProps> = ({animeList}) => {\r\n   const [currentIndex, setCurrentIndex] = React.useState(0);\r\n   const [name, setName] = React.useState(animeList[0].name);\r\n   const [img, setImg] = React.useState(animeList[0].img);\r\n\r\n   const styles: React.CSSProperties = {\r\n      backgroundImage: `url(${img})`,\r\n   };\r\n\r\n   const handleChangeBanner = (index: number) => () => {\r\n      setName(animeList[index].name);\r\n      setImg(animeList[index].img);\r\n      setCurrentIndex(index);\r\n   };\r\n\r\n   return (\r\n      <article className=\"Banner\" style={styles}>\r\n         <img src=\"\" alt=\"\" />\r\n         <h1 className=\"Banner__Name\">{name}</h1>\r\n         <section className=\"Banner__Btns\">\r\n            {animeList.map((elem, i, arr) => {\r\n               return (\r\n                  <div\r\n                     key={elem.id}\r\n                     className={currentIndex === i ? \"Banner__BtnNav Banner__BtnNav--selected\" : \"Banner__BtnNav\"}\r\n                     onClick={handleChangeBanner(i)}\r\n                  />\r\n               );\r\n            })}\r\n         </section>\r\n      </article>\r\n   );\r\n};\r\n\r\nexport default Banner;\r\n","import * as React from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport \"./AnimeCard.css\";\r\n\r\nexport interface AnimeCardProps {\r\n   id: number;\r\n   name: string;\r\n   cover: string;\r\n}\r\n\r\nconst AnimeCard: React.FC<AnimeCardProps> = ({id, name, cover}) => {\r\n   const history = useHistory();\r\n\r\n   const handleView = () => {\r\n      history.push(`/anime-details/${id}`);\r\n   };\r\n\r\n   return (\r\n      <div className=\"AnimeCard\" onClick={handleView}>\r\n         <img className=\"AnimeCard__img\" src={cover} alt=\"anime cover\" />\r\n         <figcaption className=\"AnimeCard__figcaption\">\r\n            <p>{name}</p>\r\n         </figcaption>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default AnimeCard;\r\n","import * as React from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport \"./EpisodeCard.css\";\r\n\r\nexport interface EpisodeCardProps {\r\n   id: number;\r\n   anime: string;\r\n   thumbnail: string;\r\n   number: number;\r\n}\r\n\r\nconst EpisodeCard: React.FC<EpisodeCardProps> = ({id, anime, thumbnail, number}) => {\r\n   const history = useHistory();\r\n\r\n   const handleView = () => {\r\n      history.push(`/episode-details/${id}`);\r\n   };\r\n\r\n   return (\r\n      <div className=\"EpisodeCard\" onClick={handleView}>\r\n         <img className=\"EpisodeCard__img\" src={thumbnail} alt=\"episode cover\" />\r\n         <figcaption className=\"EpisodeCard__figcaption\">\r\n            <h1>{anime}</h1>\r\n            <h2>Episode {number}</h2>\r\n         </figcaption>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default EpisodeCard;\r\n","import * as React from \"react\";\r\nimport \"./Gallery.css\";\r\nimport {AnimeObj} from \"../../Types/AnimeObj\";\r\nimport {EpisodeObj} from \"../../Types/EpisodeObj\";\r\nimport AnimeCard from \"../AnimeComponents/AnimeCard/AnimeCard\";\r\nimport EpisodeCard from \"../EpisodeComponents/EpisodeCard/EpisodeCard\";\r\n\r\ninterface GalleryProps {\r\n   type: \"Anime\" | \"Episode\";\r\n   listAnime?: AnimeObj[];\r\n   listEpisode?: EpisodeObj[];\r\n   withoutPadding?: boolean;\r\n}\r\n\r\nconst Gallery: React.FC<GalleryProps> = ({type, listAnime, listEpisode, withoutPadding}) => {\r\n   return (\r\n      <section className={withoutPadding ? \"gallery gallery--withoutPadding\" : \"gallery\"}>\r\n         <div className=\"gallery__row\">\r\n            {type === \"Episode\" && listEpisode !== undefined\r\n               ? listEpisode.map((episode) => {\r\n                    return (\r\n                       <EpisodeCard\r\n                          key={episode.id}\r\n                          id={episode.id}\r\n                          anime={episode.animeName}\r\n                          thumbnail={episode.thumbnail}\r\n                          number={episode.number}\r\n                       />\r\n                    );\r\n                 })\r\n               : type === \"Anime\" && listAnime !== undefined\r\n               ? listAnime.map((anime) => {\r\n                    return <AnimeCard key={anime.id} id={anime.id} name={anime.name} cover={anime.cover} />;\r\n                 })\r\n               : \"Error no se cargo la vista previa\"}\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default Gallery;\r\n","import * as React from \"react\";\r\nimport \"./AnimeView.css\";\r\nimport {Redirect, useParams} from \"react-router\";\r\nimport {AnimeObj} from \"../../../Types/AnimeObj\";\r\nimport Title from \"../../Title/Title\";\r\nimport Gallery from \"../../Gallery/Gallery\";\r\n\r\ninterface AnimeViewProps {\r\n   list: AnimeObj[];\r\n}\r\n\r\nconst AnimeView: React.FC<AnimeViewProps> = ({list}) => {\r\n   const {id: idString} = useParams<{id: string}>();\r\n   const id = parseFloat(idString);\r\n\r\n   const elem = list.find((elem) => {\r\n      // return elem.id === parseInt(id);\r\n      if (elem.id === id) {\r\n         return true;\r\n      } else {\r\n         return false;\r\n      }\r\n   });\r\n\r\n   if (!elem) {\r\n      return <Redirect to=\"/404\" />;\r\n   }\r\n\r\n   return (\r\n      <article className=\"AnimeView\">\r\n         <section className=\"AnimeView__Info\">\r\n            <img className=\"AnimeView__Image\" src={elem.cover} alt=\"Anime--Cover.png\" />\r\n            <div className=\"AnimeView__Data\">\r\n               <p className=\"AnimeView__Name\">{elem.name}</p>\r\n               <div className=\"AnimeView__Tags\">\r\n                  {elem.tags.map((tag, i) => {\r\n                     return (\r\n                        <div className=\"AnimeView__Tag\" key={i}>\r\n                           {tag}\r\n                        </div>\r\n                     );\r\n                  })}\r\n               </div>\r\n               <p className=\"AnimeView__Description\">{elem.description}</p>\r\n               <p className=\"AnimeView__Status\">{elem.status}</p>\r\n            </div>\r\n            {/* llenar este espacio */}\r\n         </section>\r\n         <section className=\"AnimeView__Episodes\">\r\n            <Title text=\"Episodes\" url={\"\"}></Title>\r\n            <Gallery type=\"Episode\" listEpisode={elem.episodes} withoutPadding />\r\n         </section>\r\n      </article>\r\n   );\r\n};\r\n\r\nexport default AnimeView;\r\n","import {createTheme} from \"@mui/material/styles\";\r\n\r\nexport const theme = createTheme({\r\n   palette: {\r\n      primary: {\r\n         main: \"#c678dd\",\r\n      },\r\n      secondary: {\r\n         main: \"#f44336\",\r\n      },\r\n   },\r\n});\r\n","import * as React from \"react\";\r\nimport \"./EpisodeView.css\";\r\nimport {Redirect, useParams} from \"react-router\";\r\nimport {EpisodeObj} from \"../../../Types/EpisodeObj\";\r\n\r\ninterface EpisodeViewProps {\r\n   list: EpisodeObj[];\r\n}\r\n\r\nconst EpisodeView: React.FC<EpisodeViewProps> = ({list}) => {\r\n   const {id: idString} = useParams<{id: string}>();\r\n   const id = parseFloat(idString);\r\n\r\n   const elem = list.find((elem) => {\r\n      // return elem.id === parseInt(id);\r\n      if (elem.id === id) {\r\n         return true;\r\n      } else {\r\n         return false;\r\n      }\r\n   });\r\n\r\n   if (!elem) {\r\n      return <Redirect to=\"/404\" />;\r\n   }\r\n   return (\r\n      <article className=\"EpisodeView\">\r\n         <section className=\"EpisodeView__Content\">\r\n            <div className=\"EpisodeView__Info\">\r\n               <img src=\"\" alt=\"\" />\r\n               <div className=\"EpisodeView__Data\">\r\n                  <p className=\"EpisodeView__Anime\">{elem.animeName}</p>\r\n                  <p className=\"EpisodeView__Name\">{elem.name}</p>\r\n                  <p className=\"EpisodeView__Description\">{elem.description}</p>\r\n                  <p className=\"EpisodeView__Date\">{elem.date}</p>\r\n               </div>\r\n               <div className=\"EpisodeView__Controllers\">\r\n                  <div></div>\r\n               </div>\r\n            </div>\r\n            <div className=\"EpisodeView__Player\">\r\n               <iframe src=\"\" frameBorder=\"0\"></iframe>\r\n            </div>\r\n         </section>\r\n         <hr />\r\n         <section className=\"EpisodeView__Adds\"></section>\r\n      </article>\r\n   );\r\n};\r\n\r\nexport default EpisodeView;\r\n","import React from \"react\";\nimport {HashRouter, Route, Switch, Redirect} from \"react-router-dom\";\nimport \"./App.css\";\n\nimport {BannerObj} from \"../../Types/BannerObj\";\nimport {AnimeObj} from \"../../Types/AnimeObj\";\nimport {EpisodeObj} from \"../../Types/EpisodeObj\";\n\nimport AnimeForm from \"../Forms/AnimeForm/AnimeForm\";\nimport Title from \"../Title/Title\";\nimport Header from \"../Header/Header\";\nimport Banner from \"../Banner/Banner\";\nimport AnimeView from \"../AnimeComponents/AnimeView/AnimeView\";\nimport Gallery from \"../Gallery/Gallery\";\nimport {TagOption} from \"../../Types/TagOption\";\nimport {ThemeProvider} from \"@emotion/react\";\nimport {theme} from \"../../utils/Theme\";\nimport EpisodeView from \"../EpisodeComponents/EpisodeView/EpisodeView\";\n\nfunction App() {\n   const animesBanner: BannerObj[] = [\n      {\n         id: 0,\n         img: `${process.env.PUBLIC_URL}/images/Banners/banner-naruto.png`,\n         name: \"Boruto: Naruto Next Generations\",\n      },\n      {\n         id: 1,\n         img: `${process.env.PUBLIC_URL}/images/Banners/banner-naruto.png`,\n         name: \"Naruto\",\n      },\n      {\n         id: 2,\n         img: `${process.env.PUBLIC_URL}/images/Banners/banner-naruto.png`,\n         name: \"Jujutsu Kaisen\",\n      },\n   ];\n\n   const [episodeElems, setEpisodeElems] = React.useState<EpisodeObj[]>([\n      {\n         id: Math.random(),\n         animeName: \"Jujutsu Kaisen\",\n         number: 1,\n         name: \"some name xd\",\n         description: \"some description\",\n         date: \"12-9-2021\",\n         thumbnail: `${process.env.PUBLIC_URL}/images/Thumbnails/jujutsu/jujutsu_episode_1.jpg`,\n         videoUrl: \"https://\",\n      },\n   ]);\n\n   const [animeElems, setAnimeElems] = React.useState<AnimeObj[]>([\n      {\n         id: Math.random(),\n         name: \"Jujutsu Kaisen\",\n         cover: `${process.env.PUBLIC_URL}/images/Covers/jujutsu-kaisen-cover.png`,\n         description: `Yuji Itadori is a boy with tremendous physical strength, though he lives a completely ordinary high school life. \n               One day, to save a classmate who has been attacked by curses, he eats the finger of Ryomen Sukuna, taking the curse into his own soul. \n               From then on, he shares one body with Ryomen Sukuna. Guided by the most powerful of sorcerers, Satoru Gojo, Itadori is admitted to Tokyo Jujutsu High School, \n               an organization that fights the curses... and thus begins the heroic tale of a boy who became a curse to exorcise a curse, a life from which he could never turn back.`,\n         status: \"Finish\",\n         tags: [\"Action\", \"Shonen\", \"Supernatural\"],\n         episodes: [episodeElems[0]],\n      },\n   ]);\n\n   const [tagOptions, setTagOptions] = React.useState<TagOption[]>([\n      {label: \"test 1\"},\n      {label: \"test 2\"},\n      {label: \"Animals\"},\n   ]);\n\n   const handleAddTagOption = (newTagOption: TagOption) => {\n      setTagOptions([...tagOptions, newTagOption]);\n   };\n\n   const handleCreateAnime = (newAnimeElem: AnimeObj) => {\n      console.log(\"nuevo elemento!\", newAnimeElem);\n      // creamos un nuevo arreglo\n      const arrayCopy = [\n         ...animeElems, // ponemos todos los elementos que ya existían\n         newAnimeElem,\n      ];\n      setAnimeElems(arrayCopy);\n   };\n\n   const handleCreateEpisode = (newEpisodeElem: EpisodeObj) => {\n      console.log(\"nuevo elemento!\", newEpisodeElem);\n      // creamos un nuevo arreglo\n      const arrayCopy = [\n         ...episodeElems, // ponemos todos los elementos que ya existían\n         newEpisodeElem,\n      ];\n      setEpisodeElems(arrayCopy);\n   };\n\n   return (\n      <ThemeProvider theme={theme}>\n         <HashRouter>\n            <Header />\n\n            <Switch>\n               <Route exact path=\"/\">\n                  <Banner animeList={animesBanner} />\n                  <article className=\"Main\">\n                     <section className=\"Main__Content\">\n                        <Title text=\"Latest Episodes\" url=\"\" />\n\n                        <Gallery type=\"Episode\" listEpisode={episodeElems} />\n\n                        <Title text=\"Latest Animes\" url=\"\" />\n\n                        <Gallery type=\"Anime\" listAnime={animeElems} withoutPadding />\n                     </section>\n                     <hr />\n                     <section className=\"Main__News\"></section>\n                  </article>\n               </Route>\n\n               <Route path=\"/anime-details/:id\">\n                  <AnimeView list={animeElems} />\n               </Route>\n\n               <Route path=\"/episode-details/:id\">\n                  <EpisodeView list={episodeElems} />\n               </Route>\n\n               <Route path=\"/Forms\">\n                  <AnimeForm onCreate={handleCreateAnime} tagOptions={tagOptions} addTagOption={handleAddTagOption} />\n               </Route>\n\n               <Route path=\"/Studios\"></Route>\n            </Switch>\n         </HashRouter>\n      </ThemeProvider>\n   );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}