{"version":3,"sources":["components/Header/NavLink.tsx","Data/Images/logo.svg","components/Header/Header.tsx","components/AnimeCard/AnimeCard.tsx","Data/Images/AnimeCovers/jujutsu-kaisen-cover.png","components/AnimeForm/AnimeForm.tsx","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["NavLink","text","active","url","className","href","Header","banner","src","logo","alt","AnimeCard","name","imgUrl","AnimeForm","onCreate","React","setFormSubmitted","setName","setUrl","onSubmit","event","preventDefault","console","log","type","onChange","target","value","placeholder","App","useState","id","Math","random","coverJutjusu","animeElems","setAnimeElems","map","elem","newAnimeElem","arrayCopy","slice","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9e4d888.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport \"./NavLink.css\";\r\n\r\ninterface NavLinkProps {\r\n    text: string;\r\n    active?: boolean;\r\n    url: string;\r\n}\r\n\r\nconst NavLink: React.FC<NavLinkProps> = ({ text, active, url }) => {\r\n    let className = \"Link\";\r\n    if (active) {\r\n        className += \" Link--active\";\r\n    }\r\n\r\n    return (\r\n        <a className={className} href={url}>\r\n            {text}\r\n        </a>\r\n    );\r\n};\r\n\r\nexport default NavLink;\r\n","export default __webpack_public_path__ + \"static/media/logo.172c94f6.svg\";","import * as React from \"react\";\r\nimport \"./Header.css\";\r\nimport NavLink from \"./NavLink\";\r\nimport logo from \"../../Data/Images/logo.svg\";\r\n\r\ninterface HeaderProps {\r\n    banner?: boolean;\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = ({banner}) => {\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"header__section\">\r\n                <img className=\"header__logo\" src={logo} alt=\"\" />\r\n                <nav>\r\n                    <NavLink text=\"Home\" url=\"\" active />\r\n                    <NavLink text=\"News\" url=\"\" />\r\n                    <NavLink text=\"Studios\" url=\"\" />\r\n                    <NavLink text=\"Social\" url=\"\" />\r\n                </nav>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import * as React from \"react\";\r\nimport \"./AnimeCard.css\";\r\n\r\nexport interface AnimeCardProps {\r\n    name: string;\r\n    imgUrl: string;\r\n}\r\n\r\nconst AnimeCard: React.FC<AnimeCardProps> = ({name, imgUrl}) => {\r\n    return (\r\n        <div className=\"AnimeCard\">\r\n            <img className=\"AnimeCard__img\" src={imgUrl} alt=\"anime cover\" />\r\n            <figcaption className=\"AnimeCard__figcaption\">\r\n                <p>{name}</p>\r\n            </figcaption>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnimeCard;\r\n","export default __webpack_public_path__ + \"static/media/jujutsu-kaisen-cover.49a2eef2.png\";","import * as React from \"react\";\r\nimport \"./AnimeForm.css\";\r\nimport {AnimeCardProps} from \"../AnimeCard/AnimeCard\";\r\n\r\ninterface AnimeFormProps {\r\n    onCreate: (newAnimeElem: AnimeCardProps) => void;\r\n}\r\n\r\nconst AnimeForm: React.FC<AnimeFormProps> = ({onCreate}) => {\r\n    const [formSubmitted, setFormSubmitted] = React.useState(false);\r\n\r\n    const [name, setName] = React.useState(\"\");\r\n    const handleNameChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n        setName(event.target.value);\r\n    };\r\n\r\n    const [url, setUrl] = React.useState(\"\");\r\n    const handleUrlChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n        setUrl(event.target.value);\r\n    };\r\n\r\n    const handleSubmit: React.FormEventHandler<HTMLFormElement> = (event: any) => {\r\n        event.preventDefault();\r\n        setFormSubmitted(true);\r\n        //if (isTitleValid && isUrlValid) {\r\n        console.log(\"valid\");\r\n        // si el formulario es válido, llamamos al evento onCreate\r\n        onCreate({\r\n            name: name,\r\n            imgUrl: url,\r\n        });\r\n        /*}\r\n         else {\r\n            console.log(\"invalid\");\r\n        }*/\r\n    };\r\n\r\n    return (\r\n        <form className=\"AnimeForm\" onSubmit={handleSubmit}>\r\n            <h2>Create animeCard</h2>\r\n            <label className=\"input\">\r\n                name\r\n                <input type=\"text\" onChange={handleNameChange} value={name} placeholder=\"Name\" />\r\n            </label>\r\n\r\n            <label className=\"input\">\r\n                Image Url\r\n                <input type=\"text\" onChange={handleUrlChange} value={url} placeholder=\"Image Url\" />\r\n            </label>\r\n\r\n            <button>Create</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default AnimeForm;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"../Header/Header\";\n\nimport AnimeElem, {AnimeCardProps} from \"../AnimeCard/AnimeCard\";\n\nimport coverJutjusu from \"../../Data/Images/AnimeCovers/jujutsu-kaisen-cover.png\";\nimport AnimeForm from \"../AnimeForm/AnimeForm\";\n\ntype AnimeCardObj = AnimeCardProps & {\n    id: number;\n};\n\nfunction App() {\n    const [animeElems, setAnimeElems] = React.useState<AnimeCardObj[]>([\n        {\n            id: Math.random(),\n            name: \"Jujutsu Kaisen\",\n            imgUrl: coverJutjusu,\n        },\n    ]);\n\n    const handleCreate = (newAnimeElem: AnimeCardProps) => {\n        console.log(\"nuevo elemento!\", newAnimeElem);\n\n        const arrayCopy = animeElems.slice(); // crear una copia del arreglo\n        arrayCopy.push({\n            // agregamos el nuevo elemento con la información recibida\n            id: Math.random(),\n            name: newAnimeElem.name,\n            imgUrl: coverJutjusu,\n        });\n\n        // creamos un nuevo arreglo\n        const newArray = [\n            ...animeElems, // ponemos todos los elementos que ya existían\n            {\n                // agregamos el nuevo elemento con la información recibida\n                id: Math.random(),\n                name: newAnimeElem.name,\n                imgUrl: newAnimeElem.imgUrl,\n            },\n        ];\n        setAnimeElems(arrayCopy);\n    };\n\n    return (\n        <div className=\"App\">\n            <Header />\n            <main>\n                <div className=\"gallery__title\">\n                    <h2>Latest Episodes</h2>\n                    <p>See All</p>\n                </div>\n\n                <section className=\"gallery\">\n                    <div className=\"gallery__row\">\n                        {animeElems.map((elem) => {\n                            return <AnimeElem key={elem.id} name={elem.name} imgUrl={elem.imgUrl} />;\n                        })}\n                    </div>\n                </section>\n                <AnimeForm onCreate={handleCreate} />\n            </main>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}