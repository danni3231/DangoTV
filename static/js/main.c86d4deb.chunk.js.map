{"version":3,"sources":["components/AnimeCard/AnimeCard.tsx","components/EpisodeCard/EpisodeCard.tsx","Data/AnimeCovers/jujutsu-kaisen-cover.png","Data/Thumbnails/jujutsu/jujutsu_episode_1.jpg","components/AnimeForm/AnimeForm.tsx","components/Title/Title.tsx","components/Header/NavLink.tsx","Data/Images/logo.svg","components/Header/InputSearch.tsx","components/Header/Header.tsx","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["AnimeCard","name","cover","className","src","alt","EpisodeCard","anime","thumbnail","number","AnimeForm","onCreate","React","setFormSubmitted","setName","url","setUrl","onSubmit","event","preventDefault","console","log","type","onChange","target","value","placeholder","Title","text","href","NavLink","activeClassName","to","InputSearch","Header","banner","logo","App","useState","id","Math","random","coverJutjusu","animeElems","setAnimeElems","thumbnailJutjusu","episodeElems","path","map","elem","newAnimeElem","arrayCopy","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c86d4deb.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport \"./AnimeCard.css\";\r\n\r\nexport interface AnimeCardProps {\r\n    name: string;\r\n    cover: string;\r\n}\r\n\r\nconst AnimeCard: React.FC<AnimeCardProps> = ({name, cover}) => {\r\n    return (\r\n        <div className=\"AnimeCard\">\r\n            <img className=\"AnimeCard__img\" src={cover} alt=\"anime cover\" />\r\n            <figcaption className=\"AnimeCard__figcaption\">\r\n                <p>{name}</p>\r\n            </figcaption>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnimeCard;\r\n","import * as React from \"react\";\r\nimport \"./EpisodeCard.css\";\r\n\r\nexport interface EpisodeCardProps {\r\n   anime: string;\r\n   thumbnail: string;\r\n   number: number;\r\n}\r\n\r\nconst EpisodeCard: React.FC<EpisodeCardProps> = ({anime, thumbnail, number}) => {\r\n   return (\r\n      <div className=\"EpisodeCard\">\r\n         <img className=\"EpisodeCard__img\" src={thumbnail} alt=\"episode cover\" />\r\n         <figcaption className=\"EpisodeCard__figcaption\">\r\n            <h1>{anime}</h1>\r\n            <h2>Episode {number}</h2>\r\n         </figcaption>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default EpisodeCard;\r\n","export default __webpack_public_path__ + \"static/media/jujutsu-kaisen-cover.49a2eef2.png\";","export default __webpack_public_path__ + \"static/media/jujutsu_episode_1.3cacf505.jpg\";","import * as React from \"react\";\r\nimport \"./AnimeForm.css\";\r\nimport {AnimeCardProps} from \"../AnimeCard/AnimeCard\";\r\n\r\ninterface AnimeFormProps {\r\n    onCreate: (newAnimeElem: AnimeCardProps) => void;\r\n}\r\n\r\nconst AnimeForm: React.FC<AnimeFormProps> = ({onCreate}) => {\r\n    const [formSubmitted, setFormSubmitted] = React.useState(false);\r\n\r\n    const [name, setName] = React.useState(\"\");\r\n    const handleNameChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n        setName(event.target.value);\r\n    };\r\n\r\n    const [url, setUrl] = React.useState(\"\");\r\n    const handleUrlChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n        setUrl(event.target.value);\r\n    };\r\n\r\n    const handleSubmit: React.FormEventHandler<HTMLFormElement> = (event: any) => {\r\n        event.preventDefault();\r\n        setFormSubmitted(true);\r\n        //if (isTitleValid && isUrlValid) {\r\n        console.log(\"valid\");\r\n        // si el formulario es v√°lido, llamamos al evento onCreate\r\n        onCreate({\r\n            name: name,\r\n            cover: url,\r\n        });\r\n        /*}\r\n         else {\r\n            console.log(\"invalid\");\r\n        }*/\r\n    };\r\n\r\n    return (\r\n        <form className=\"AnimeForm\" onSubmit={handleSubmit}>\r\n            <h2>Create animeCard</h2>\r\n            <label className=\"input\">\r\n                name\r\n                <input type=\"text\" onChange={handleNameChange} value={name} placeholder=\"Name\" />\r\n            </label>\r\n\r\n            <label className=\"input\">\r\n                Image Url\r\n                <input type=\"text\" onChange={handleUrlChange} value={url} placeholder=\"Image Url\" />\r\n            </label>\r\n\r\n            <button>Create</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default AnimeForm;\r\n","import * as React from \"react\";\r\nimport \"./Title.css\";\r\n\r\ninterface TitleProps {\r\n    text: string;\r\n    url: string;\r\n}\r\n\r\nconst Title: React.FC<TitleProps> = ({text, url}) => {\r\n    return (\r\n        <div className=\"Title\">\r\n            <h2>{text}</h2>\r\n            <a href={url}>See All</a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Title;\r\n","import * as React from \"react\";\r\nimport {NavLink as Rlink} from \"react-router-dom\";\r\nimport \"./NavLink.css\";\r\n\r\ninterface NavLinkProps {\r\n   text: string;\r\n   url: string;\r\n}\r\n\r\nconst NavLink: React.FC<NavLinkProps> = ({text, url}) => {\r\n   return (\r\n      <Rlink className=\"Link\" activeClassName=\"Link--active\" to={url}>\r\n         {text}\r\n      </Rlink>\r\n   );\r\n};\r\n\r\nexport default NavLink;\r\n","export default __webpack_public_path__ + \"static/media/logo.172c94f6.svg\";","import * as React from \"react\";\r\nimport \"./InputSearch.css\";\r\n\r\ninterface InputSearchProps {}\r\n\r\nconst InputSearch: React.FC<InputSearchProps> = ({}) => {\r\n   return (\r\n      <div className=\"inputSearch\">\r\n         <input type=\"text\" placeholder=\"What do you want to search?\" />\r\n         <span className=\"inputSearch__Icon material-icons-round md-dark\">search</span>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default InputSearch;\r\n","import * as React from \"react\";\r\nimport \"./Header.css\";\r\nimport NavLink from \"./NavLink\";\r\nimport logo from \"../../Data/Images/logo.svg\";\r\nimport InputSearch from \"./InputSearch\";\r\n\r\ninterface HeaderProps {\r\n   banner?: boolean;\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = ({banner}) => {\r\n   return (\r\n      <header className=\"header\">\r\n         <div className=\"header__section\">\r\n            <img className=\"header__logo\" src={logo} alt=\"\" />\r\n            <nav>\r\n               <NavLink text=\"Home\" url=\"/Home\" />\r\n               <NavLink text=\"Forms\" url=\"/Forms\" />\r\n               <NavLink text=\"Studios\" url=\"\" />\r\n               <NavLink text=\"Social\" url=\"\" />\r\n            </nav>\r\n         </div>\r\n\r\n         <div className=\"header__section\">\r\n            <InputSearch />\r\n         </div>\r\n      </header>\r\n   );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\nimport {HashRouter, Route, Switch, Redirect} from \"react-router-dom\";\nimport \"./App.css\";\n\nimport AnimeElem, {AnimeCardProps} from \"../AnimeCard/AnimeCard\";\nimport EpisodeElem, {EpisodeCardProps} from \"../EpisodeCard/EpisodeCard\";\n\nimport coverJutjusu from \"../../Data/AnimeCovers/jujutsu-kaisen-cover.png\";\nimport thumbnailJutjusu from \"../../Data/Thumbnails/jujutsu/jujutsu_episode_1.jpg\";\nimport AnimeForm from \"../AnimeForm/AnimeForm\";\n\nimport Title from \"../Title/Title\";\nimport Header from \"../Header/Header\";\n\ntype AnimeCardObj = AnimeCardProps & {\n   id: number;\n};\n\ntype EpisodeCardObj = EpisodeCardProps & {\n   id: number;\n};\n\nfunction App() {\n   const [animeElems, setAnimeElems] = React.useState<AnimeCardObj[]>([\n      {\n         id: Math.random(),\n         name: \"Jujutsu Kaisen\",\n         cover: coverJutjusu,\n      },\n   ]);\n\n   const handleCreateAnime = (newAnimeElem: AnimeCardProps) => {\n      console.log(\"nuevo elemento!\", newAnimeElem);\n      // creamos un nuevo arreglo\n      const arrayCopy = [\n         ...animeElems, // ponemos todos los elementos que ya exist√≠an\n         {\n            // agregamos el nuevo elemento con la informaci√≥n recibida\n            id: Math.random(),\n            name: newAnimeElem.name,\n            cover: coverJutjusu,\n         },\n      ];\n      setAnimeElems(arrayCopy);\n   };\n\n   const [episodeElems, setEpisodeElems] = React.useState<EpisodeCardObj[]>([\n      {\n         id: Math.random(),\n         anime: \"Jujutsu Kaisen\",\n         thumbnail: thumbnailJutjusu,\n         number: 1,\n      },\n   ]);\n\n   const handleCreateEpisode = (newEpisodeElem: EpisodeCardProps) => {\n      console.log(\"nuevo elemento!\", newEpisodeElem);\n      // creamos un nuevo arreglo\n      const arrayCopy = [\n         ...episodeElems, // ponemos todos los elementos que ya exist√≠an\n         {\n            // agregamos el nuevo elemento con la informaci√≥n recibida\n            id: Math.random(),\n            anime: newEpisodeElem.anime,\n            thumbnail: thumbnailJutjusu,\n            number: 1,\n         },\n      ];\n      setEpisodeElems(arrayCopy);\n   };\n\n   return (\n      <HashRouter>\n         <Header />\n\n         <Route path=\"/Home\">\n            <article className=\"Main\">\n               <section className=\"Main__Content\">\n                  <Title text=\"Latest Episodes\" url=\"\" />\n\n                  <section className=\"gallery\">\n                     <div className=\"gallery__row\">\n                        {episodeElems.map((elem) => {\n                           return (\n                              <EpisodeElem\n                                 key={elem.id}\n                                 anime={elem.anime}\n                                 thumbnail={elem.thumbnail}\n                                 number={elem.number}\n                              />\n                           );\n                        })}\n                     </div>\n                  </section>\n\n                  <Title text=\"Latest Animes\" url=\"\" />\n\n                  <section className=\"gallery gallery--withoutPadding\">\n                     <div className=\"gallery__row\">\n                        {animeElems.map((elem) => {\n                           return <AnimeElem key={elem.id} name={elem.name} cover={elem.cover} />;\n                        })}\n                     </div>\n                  </section>\n               </section>\n               <hr />\n               <section className=\"Main__News\"></section>\n            </article>\n         </Route>\n\n         <Route path=\"/Forms\">\n            <AnimeForm onCreate={handleCreateAnime} />\n         </Route>\n      </HashRouter>\n   );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}